{"version":3,"sources":["service/opschemas.js","service/operation.js","service/sign.js","components/SignErrorsView.jsx","service/api-nodes.js","components/SignFormComponents.jsx","components/SignForm.jsx","components/OperationDetails.jsx","components/TransactionView.jsx","components/ErrorsView.jsx","components/App.js","serviceWorker.js","index.js"],"names":["type","minItems","items","pattern","minimum","maximum","maxLength","enum","ROLES_PRIORITY","sort_roles","roles","sort","a","b","validate","Ajv","schemas","GolosSchema","verbose","getSchema","Transaction","json","errors","this","raw_transaction","ops","readOps","length","temp","op","push","role","opTuple","Operation","name","body","operations","operation","golos","require","SIGN_TYPE","WEBSOCKET","DEFAULT_WS","getCurrentSelectedNode","localStorage","getItem","setupNode","ws","api","stop","e","config","set","transaction","sign_type","account","password","required_wif","wif","getWif","tx","extensions","key","broadcast","_prepareTransaction","prepared_tx","signed_tx","auth","signTransaction","broadcastTransactionSynchronousAsync","ret","getPrivateKeys","getAccountsAsync","signandsend","ERROR_DESC","getDesc","msg","match","SignErrorsView","error","props","console","message","arr","split","i","className","desc","result","block_num","id","redirect","isError","alert","extractErrorMessage","extractUsefulInfos","Component","ApiNodes","useState","nodes","setNodes","useEffect","fetch","then","log","fetchData","map","node","value","url","NodeSelector","current_ws","htmlFor","defaultValue","onChange","v","setItem","setCurrentSelectedNode","target","translate_role","WifInput","wif_class","wif_error","ev","required","SignButton","onClick","onSign","FormWif","form_class","FormAccountAndPasswort","account_error","account_class","placeholder","FormSelector","SignForm","state","user","sending","onSuccess","catch","setState","setTimeout","window","location","checkAccount","send","nowif","TabButton","active","label","BottomToggler","is_pass","icon","title","minWidth","maxWidth","getOpDetails","from","to","amount","memo","substring","JSON","stringify","OP_TRANSLATIONS","vote","comment","transfer","transfer_to_vesting","withdraw_vesting","limit_order_create","limit_order_cancel","feed_publish","convert","account_create","account_update","witness_update","account_witness_vote","account_witness_proxy","pow","custom","report_over_production","delete_comment","custom_json","comment_options","set_withdraw_vesting_route","limit_order_create2","challenge_authority","prove_authority","request_account_recovery","recover_account","change_recovery_account","escrow_transfer","escrow_dispute","escrow_release","pow2","escrow_approve","transfer_to_savings","transfer_from_savings","cancel_transfer_from_savings","custom_binary","decline_voting_rights","reset_account","set_reset_account","delegate_vesting_shares","account_create_with_delegation","account_metadata","proposal_create","proposal_update","proposal_delete","chain_properties_update","break_free_referral","delegate_vesting_shares_with_interest","reject_vesting_shares_delegation","getOpName","TransactionView","status","ErrorsView","keyword","dataPath","schemaPath","ErrorMessage","App","params","queryString","parse","search","subtitle","Object","keys","includes","sanitizeUrl","tr","content","rel","href","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qZAkIe,GAtDK,CAChB,IAAQ,qBACRA,KAAM,QACNC,SAAU,EACVC,MAAO,CACH,CAAC,KAAQ,sBAkBD,CACZ,IAAQ,iBACRF,KAAM,SACNG,QAAS,qCAsBC,CACV,IAAQ,eACRH,KAAM,SACNG,QAAS,mCAtBI,CACb,IAAQ,kBACRH,KAAM,SACNG,QAAS,cAGM,CACf,IAAQ,oBACRH,KAAM,SACNG,QAAS,wBAGG,CACZ,IAAQ,iBACRH,KAAM,UACNI,QAAS,EACTC,QAAS,KAjCK,CACd,IAAQ,mBACRL,KAAM,QACNC,SAAU,EAAGK,UAAW,EACxBJ,MAAO,CACH,CAACF,KAAM,SAAUO,KAtFA,CACrB,OACA,UAEA,WACA,sBACA,mBAEA,qBACA,qBAEA,eACA,UAEA,iBACA,iBAEA,iBACA,uBACA,wBAEA,MAEA,SAEA,yBAEA,iBACA,cACA,kBACA,6BACA,sBACA,sBACA,kBACA,2BACA,kBACA,0BACA,kBACA,iBACA,iBACA,OACA,iBACA,sBACA,wBACA,+BACA,gBACA,wBACA,gBACA,oBACA,0BACA,iCACA,mBACA,kBACA,kBACA,kBACA,0BACA,sBACA,wCACA,mCACA,iBACA,wBACA,wBA0BI,CAACP,KAAM,a,kBCtFTQ,EAAiB,CACnB,MAAU,EACV,OAAW,EACX,QAAY,EACZ,KAAS,GAGb,SAASC,EAAWC,GAChB,OAAOA,EAAMC,MAAK,SAACC,EAAEC,GACjB,OAAOL,EAAeK,GAAKL,EAAeI,MAIlD,IACME,EADM,IAAIC,IAAI,CAACC,QAASC,EAAaC,SAAS,IAC/BC,UAAU,sBAElBC,EAAb,WACI,WAAYC,GACR,GADe,qBACXP,EAASO,GAET,MAAMP,EAASQ,OAEnBC,KAAKC,gBAAL,YAA2BH,GAC3BE,KAAKE,IAAM,GACXF,KAAKG,UARb,8CAcI,WACI,GAAuB,IAApBH,KAAKE,IAAIE,OACR,OAAO,KAEX,IAJe,EAITC,EAAO,GAJE,cAKDL,KAAKE,KALJ,IAKf,IAAI,EAAJ,qBAAwB,CAAC,IAAjBI,EAAgB,QACpBD,EAAKE,KAAKD,EAAGE,OANF,8BAQf,OAAOtB,EAAWmB,GAAM,KAtBhC,qBAyBI,WAAW,IAAD,gBACaL,KAAKC,iBADlB,IACN,IAAI,EAAJ,qBAAyC,CAAC,IAAlCQ,EAAiC,QACrCT,KAAKE,IAAIK,KAAK,IAAIG,EAAUD,EAAQ,GAAIA,EAAQ,MAF9C,mCAzBd,KAgCMC,E,WACF,WAAYC,EAAMC,GAAO,oBACrBZ,KAAKW,KAAOA,EACZX,KAAKY,KAAOA,EAFQ,oBAINC,KAJM,IAIpB,IAAI,EAAJ,qBAA0B,CAAC,IAAnBP,EAAkB,QACnBA,EAAGQ,YAAcd,KAAKW,OACrBX,KAAKb,MAAQD,EAAWoB,EAAGnB,SANf,+B,sCAWxB,WAEI,OAAOa,KAAKb,MAAM,O,oDCtEpB4B,EAAQC,EAAQ,KAETC,EACC,WADDA,EAEJ,MAGHC,EAAY,YACZC,EAAa,4BAED,mBACbA,EAAc,OADD,cAEd,2BAA6B,SAFf,cAGd,kCAAoC,gBAHtB,cAId,4BAA8B,SAG3B,SAASC,IACZ,OAAOC,aAAaC,QAAQJ,IAAcC,EAavC,SAASI,IACZ,IAAMC,EAAKJ,IACX,IACIL,EAAMU,IAAIC,OACZ,MAAMC,IAGRZ,EAAMa,OAAOC,IAAIX,EAAWM,G,4CAWhC,WAA2BM,EAAaC,EAAWC,EAASC,GAA5D,6BAAA5C,EAAA,6DAEIkC,IAEOtB,EAAiC6B,EAAjC7B,gBAAiBiC,EAAgBJ,EAAhBI,aAGlBC,EAAMC,EAAOL,EAAWC,EAASC,EAAUC,GAG3CG,EAAK,CAACC,WAAY,GAAIzB,WAAYZ,GAClCsC,EAXV,eAWkBL,EAAeC,GAXjC,SAc8BpB,EAAMyB,UAAUC,oBAAoBJ,GAdlE,cAcUK,EAdV,OAiBUC,EAAY5B,EAAM6B,KAAKC,gBAAgBH,EAAaH,GAjB9D,UAoBoBxB,EAAMU,IAAIqB,qCAAqCH,GApBnE,eAoBQI,EApBR,yBAqBWA,GArBX,6C,sBAiCA,SAASX,EAAOL,EAAWC,EAASC,EAAUC,GAC1C,OAAOH,GACH,KAAKd,EAED,OADaF,EAAM6B,KAAKI,eAAehB,EAASC,EAAU,CAACC,IAC/CA,GAChB,QACI,OAAOD,G,4CASZ,WAA4BD,GAA5B,iBAAA3C,EAAA,yDACC2C,EADD,yCAEQ,8PAFR,uBAIiBjB,EAAMU,IAAIwB,iBAAiB,CAACjB,IAJ7C,oFAMQ,oMANR,gCAQI,MARJ,6C,sBAWQkB,M,yDCzGTC,EAAa,CACf,mBAAoB,idACpB,QAAW,yhBACX,MAAW,2OACX,MAAW,wRACX,MAAW,8MACX,QAAW,iKACX,QAAW,+NACX,MAAW,+KAGf,SAASC,EAAQC,GACb,IAAI,IAAIzE,KAAWuE,EACf,GAAGE,EAAIC,MAAM1E,GACT,OAAOuE,EAAWvE,GAG1B,OAAO,KAGJ,IAiDQ2E,EAjDf,yKAOI,WACI,IAAMC,EAAQxD,KAAKyD,MAAMD,MACzBE,QAAQF,MAAM,QAASA,GACvB,IAAIT,EAAM,CAAC,mLAAQ,SACnB,GAAGS,EAAMG,QAEL,IADA,IAAIC,EAAMJ,EAAMG,QAAQE,MAAM,MACtBC,EAAI,EAAGA,EAAIF,EAAIxD,OAAQ0D,IAC3B,GAAGF,EAAIE,KAAOF,EAAIE,GAAGR,MAAM,8BAA+B,CACtDP,EAAIxC,KAAK,mBAAoBwD,UAAU,OAA9B,SAAsCH,EAAIE,IAAnC,eAChB,IAAME,EAAOZ,EAAQQ,EAAIE,IACtBE,GACCjB,EAAIxC,KAAK,uBAAwBwD,UAAU,OAAlC,SAA0CC,GAA/B,eAMpC,OAAOjB,IAxBf,gCA2BI,WACI,OAAO,gCACH,+FACI,oBAAGgB,UAAU,OAAb,4EAAkC/D,KAAKyD,MAAMQ,OAAOC,aACpD,oBAAGH,UAAU,OAAb,8EAAoC/D,KAAKyD,MAAMQ,OAAOE,MACrDnE,KAAKyD,MAAMW,UAAY,oBAAGL,UAAU,OAAb,+QAAoE,iCAAS/D,KAAKyD,MAAMW,WAAxF,cAhCxC,oBAqCI,WACI,IAAMC,IAAYrE,KAAKyD,MAAMD,MACvBc,EAAQD,EAAS,SAAW,UAC5BV,EAAUU,EAAQrE,KAAKuE,sBAAsBvE,KAAKwE,qBACxD,OACI,qBAAKT,UAAW,yBAA0BO,EAAO9D,KAAK,QAAtD,SACKmD,QA3CjB,GAAoCc,a,kBCpBrB,SAASC,IAEpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,qBAAU,YACS,uCAAG,sBAAAzF,EAAA,sDACd0F,MAAM,sFACLC,MAAK,SAAAf,GAAM,OAAIA,EAAOnE,UACtBkF,MAAK,SAAAf,GAAM,OAAIY,EAASZ,MAAS,SAAAT,GAAK,OAAIE,QAAQuB,IAAI,uCAHzC,2CAAH,qDAKfC,KACD,IAGCN,EAAMO,KAAI,SAAAC,GAAI,OACV,wBAAuBC,MAAOD,EAAKE,IAAnC,SAAyCF,EAAKzE,MAAjCyE,EAAKE,QCb9B,IAAMC,EAAe,SAAC9B,GAElB,IAAM+B,EAAapE,IAEnB,OACI,sBAAK2C,UAAU,6BAAf,UACI,uBAAO0B,QAAQ,aAAf,sCACA,wBAAQ1B,UAAU,eAAeI,GAAG,aAAauB,aAAcF,EAAYG,SAAW,SAAAC,GAAC,OHS5F,WAAkD,IAAlBpE,EAAiB,uDAAZL,EACxC,IACIJ,EAAMU,IAAIC,OACZ,MAAMC,IAERZ,EAAMa,OAAOC,IAAIX,EAAWM,GAE5BH,aAAawE,QAAQ3E,EAAWM,GGhBmEsE,CAAuBF,EAAEG,OAAOV,QAA3H,SACI,cAACX,EAAD,UAMhB,SAASsB,EAAexF,GACpB,OAAOA,GACH,IAAK,QAAS,MAAO,yIACrB,IAAK,SAAU,MAAO,oIACtB,IAAK,UAAW,MAAO,8HACvB,IAAK,OAAQ,MAAO,iJACpB,QACI,OAAO,MAIZ,IAAMyF,EAAW,SAACxC,GACrB,IAAMyC,EAAazC,EAAM0C,UAAU,cAAc,GACjD,OACI,uBAAOhC,GAAIV,EAAMU,GAAIxD,KAAM8C,EAAMU,GAC7BkB,MAAO5B,EAAMtB,IACbwD,SAAU,SAACS,GAAD,OAAQ3C,EAAMkC,SAAS,MAAOS,EAAGL,OAAOV,QAClD5G,KAAK,WACLsF,UAAW,eAAiBmC,EAC5B,mBAAiB,WACjBG,UAAQ,KAePC,EAAa,SAAC7C,GACvB,OACI,qBAAKM,UAAU,4BAAf,SACI,wBAAQtF,KAAK,SAAS0F,GAAG,cAAcJ,UAAU,kBAAkBwC,QAAS9C,EAAM+C,OAAlF,uEAKCC,EAAU,SAAChD,GACpB,IAAO3B,EAAsC2B,EAAtC3B,YAAa4E,EAAyBjD,EAAzBiD,WAAYP,EAAa1C,EAAb0C,UAChC,OACI,uBAAMhC,GAAG,YAAYJ,UAAW2C,EAAhC,UACI,cAAC,EAAD,IACA,sBAAK3C,UAAU,4BAAf,UACI,uBAAO0B,QAAQ,MAAf,6FAEA,cAAC,EAAD,aAAUtB,GAAG,OAAUV,IAEvB,wBAAOU,GAAG,WAAWJ,UAAU,uBAA/B,6PAAmG,iCAASiC,EAAelE,EAAYI,mBACvI,qBAAK6B,UAAU,mBAAf,SAAmCoC,OAEvC,cAAC,EAAD,eAAiB1C,QAKhBkD,GAAyB,SAAClD,GACnC,IAAOiD,EAA2DjD,EAA3DiD,WAAYf,EAA+ClC,EAA/CkC,SAAU3D,EAAqCyB,EAArCzB,QAAS4E,EAA4BnD,EAA5BmD,cAAeT,EAAa1C,EAAb0C,UAC/CU,EAAiBD,EAAc,cAAc,GACnD,OACI,uBAAMzC,GAAG,YAAYJ,UAAW2C,EAAhC,UACI,cAAC,EAAD,IACA,sBAAK3C,UAAU,4BAAf,UACI,uBAAO0B,QAAQ,UAAf,yGAEA,uBACItB,GAAG,UACHxD,KAAK,UACL0E,MAAOrD,EACP2D,SAAU,SAACS,GAAD,OAAQT,EAAS,UAAWS,EAAGL,OAAOV,QAChD5G,KAAK,OACLsF,UAAW,eAAiB8C,EAC5BC,YAAY,iHACZT,UAAQ,IAEZ,qBAAKtC,UAAU,mBAAf,SAAmC6C,OAEvC,sBAAK7C,UAAU,4BAAf,UACI,uBAAO0B,QAAQ,MAAf,kDAEA,cAAC,EAAD,aAAUtB,GAAG,YAAeV,IAE5B,qBAAKM,UAAU,mBAAf,SAAmCoC,OAGvC,cAAC,EAAD,eAAiB1C,QAKhBsD,GAAe,SAACtD,GAEzB,OAAQA,EAAM1B,WACV,KAAKd,EACD,OAAO,cAAC,EAAD,eAAawC,IACxB,QACI,OAAO,cAAC,GAAD,eAA4BA,M,UCoChCuD,GAlJf,kDAMI,WAAYvD,GAAQ,IAAD,8BACf,cAAMA,IACDwD,MAAQ,CACT9E,IAAK,GACLH,QAASyB,EAAMyD,MAAQ,GACvB1D,MAAO,KACPS,OAAQ,KACRlC,UAAWd,EACX2F,cAAgB,KAChBO,SAAS,EACT/C,SAAU,MAVC,EANvB,wCAuBI,WAAQ,IAAD,OACHlB,EAAYlD,KAAKyD,MAAM3B,YAAa9B,KAAKiH,MAAMlF,UAAW/B,KAAKiH,MAAMjF,QAAShC,KAAKiH,MAAM9E,KACpF6C,MAAK,SAAAf,GAAM,OAAI,EAAKmD,UAAUnD,MAC9BoD,OAAM,SAAA7D,GAAK,OAAI,EAAK8D,SAAS,CAAErD,OAAQ,KAAMT,QAAOoD,cAAe,KAAMO,SAAS,OACvFnH,KAAKsH,SAAS,CAACH,SAAQ,EAAM3D,MAAO,KAAMS,OAAQ,SA3B1D,uBA8BI,SAAUA,GACNjE,KAAKsH,SAAS,CAAErD,SAAQT,MAAO,KAAMoD,cAAe,KAAMO,SAAS,IACnEnH,KAAKoE,aAhCb,sBAmCI,WAAY,IAAD,OACHpE,KAAKyD,MAAMW,UAIfmD,YAAW,WAAOC,OAAOC,SAAW,EAAKhE,MAAMW,WAAW,OAxClE,oBA2CI,WAAU,IAAD,OAEL,OAAOpE,KAAKiH,MAAMlF,WACd,KAAKd,EACG,IAAIkF,EAAY,KACZnG,KAAKiH,MAAM9E,MACXgE,EAAY,qGJsC7B,SAAP,kCInCoBuB,CAAa1H,KAAKiH,MAAMjF,SAASgD,MAAK,SAAA4B,GACnCA,GAAiBT,EAChB,EAAKmB,SAAS,CAACV,gBAAeT,cAG9B,EAAKwB,UAEVN,OAAM,SAAA7D,GACLE,QAAQF,MAAM,0IACd,EAAK8D,SAAS,CAACV,cAAe,mLAGlC,MACJ,QACI,IAAI5G,KAAKiH,MAAM9E,IAEX,YADAnC,KAAKsH,SAAS,CAACnB,UAAW,iJAI9BnG,KAAK2H,UAvErB,sBA2EI,SAASpF,EAAK8C,GAAQ,IAAD,EACjBrF,KAAKsH,UAAL,mBAAgB/E,EAAK8C,GAArB,0BAAsC,MAAtC,8BAA0D,MAA1D,MA5ER,oBA+EI,WAAU,IAAD,OACL,EAA0BrF,KAAKyD,MAAxBmE,EAAP,EAAOA,MAAOxD,EAAd,EAAcA,SAGRyD,EAAY,SAACpE,GACf,IAAQ1B,EAAc0B,EAAd1B,UACF+F,EAAS,EAAKb,MAAMlF,YAAcA,EAAY,WAAa,GACjE,OAAQ,oBAAIgC,UAAU,WAAd,SAAyB,wBAAStF,KAAK,SAASsF,UAAW,0BAA4B+D,EAAQvB,QAAS,kBAAM,EAAKe,SAAS,CAAEvF,eAArG,SAAoH0B,EAAMsE,WAGzJC,EAAgB,SAACvE,GACnB,GAAGmE,EAAO,CACN,IAAMK,EAAU,EAAKhB,MAAMlF,YAAcd,EACnCiH,EAAOD,EAAQ,cAAC,KAAD,IAAU,cAAC,KAAD,IACzBlG,EAAakG,EAAQhH,EAAcA,EACnCkH,EAAQF,EAAQ,kFAAiB,wFACvC,OAAO,wBAAQxJ,KAAK,SAAS0J,MAAOA,EAChCpE,UAAU,yDACVwC,QAAS,kBAAM,EAAKe,SAAS,CAAEvF,eAF5B,SAE2CmG,IAEtD,OAAO,MAGX,OACI,sBAAKnE,UAAU,0BAAf,WACM6D,GAAS,qBAAK7D,UAAU,QAAf,UAER/D,KAAKiH,MAAME,UAAYnH,KAAKiH,MAAMhD,QACrC,gCACA,cAAC,IAAD,CAAYmE,SAAU,IAAtB,SACI,qBAAIrE,UAAU,eAAd,UACI,cAAC8D,EAAD,CAA+BE,MAAM,kFAAiBhG,UAAWd,GAAjDA,GAChB,cAAC4G,EAAD,CAAoCE,MAAM,wFAAkBhG,UAAWd,GAAvDA,QAGxB,cAAC,IAAD,CAAYoH,SAAU,IAAtB,SACI,qBAAItE,UAAU,8BAAd,UACI,cAAC8D,EAAD,CAA+BE,MAAM,kFAAiBhG,UAAWd,GAAjDA,GAChB,cAAC4G,EAAD,CAAoCE,MAAM,wFAAkBhG,UAAWd,GAAvDA,cAQtBjB,KAAKiH,MAAMzD,OAASxD,KAAKiH,MAAMhD,SAAW,cAAC,EAAD,CAAgBT,MAAOxD,KAAKiH,MAAMzD,MAAOS,OAAQjE,KAAKiH,MAAMhD,OAAQG,SAAUA,IACzHpE,KAAKiH,MAAME,SAAW,qBAAKpD,UAAW,gCAAiCvD,KAAK,QAAtD,SACnB,wFAIDR,KAAKiH,MAAME,UAAYnH,KAAKiH,MAAMhD,QACjC,cAAC,GAAD,yBACI0B,SAAU,SAACpD,EAAI8C,GAAL,OAAe,EAAKM,SAASpD,EAAK8C,IAC5CmB,OAAQ,kBAAM,EAAKA,UACnBE,WAtDC,oBAuDG1G,KAAKiH,OACLjH,KAAKyD,SAGdzD,KAAKiH,MAAME,UAAYnH,KAAKiH,MAAMhD,QAAY,cAAC+D,EAAD,WA5IjE,GAA8BvD,aCRvB,SAAS6D,GAAahI,GACzB,OAAOA,EAAGK,MACN,IAAK,WACD,OAAO,sBAAKoD,UAAU,qBAAf,UACH,kDADG,IACkBzD,EAAGM,KAAK2H,KAD1B,KACiC,8DADjC,IACwDjI,EAAGM,KAAK4H,GADhE,KACqE,oEADrE,IAC6FlI,EAAGM,KAAK6H,OACxG,uBAAM,gFAFH,KAE8B,GAAGnI,EAAGM,KAAK8H,MAAQ,IAAIC,UAAU,EAAG,OAE7E,QACI,OAAO,8BAAMC,KAAKC,UAAUvI,EAAGM,KAAM,KAAM,MAIvD,IAAMkI,GAAkB,CACpBC,KAAM,uCACNC,QAAS,8FAETC,SAAU,6CACVC,oBAAqB,iEACrBC,iBAAkB,sEAElBC,mBAAoB,4EACpBC,mBAAoB,kFAEpBC,aAAc,8FACdC,QAAS,wGAETC,eAAgB,wFAChBC,eAAgB,8FAEhBC,eAAgB,oGAChBC,qBAAsB,+IACtBC,sBAAuB,4HAEvBC,IAAK,gBAELC,OAAQ,SAERC,uBAAwB,yDAExBC,eAAgB,4JAChBC,YAAa,0GACbC,gBAAiB,qJACjBC,2BAA4B,4JAC5BC,oBAAqB,8EACrBC,oBAAqB,sBACrBC,gBAAiB,kBACjBC,yBAA0B,2BAC1BC,gBAAiB,kBACjBC,wBAAyB,0BACzBC,gBAAiB,kBACjBC,eAAgB,iBAChBC,eAAgB,iBAChBC,KAAM,kBACNC,eAAgB,iBAChBC,oBAAqB,yFACrBC,sBAAuB,yFACvBC,6BAA8B,8HAC9BC,cAAe,gIACfC,sBAAuB,sQACvBC,cAAe,gBACfC,kBAAmB,oBACnBC,wBAAyB,0BACzBC,+BAAgC,iCAChCC,iBAAkB,8FAClBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,wBAAyB,mIACzBC,oBAAqB,+DACrBC,sCAAuC,4MACvCC,iCAAkC,4JAG/B,SAASC,GAAU1L,GACtB,IAAIK,EAAOmI,GAAgBxI,EAAGK,MAG9B,OAFIA,IAAMA,EAAOL,EAAGK,MAEb,sBAAMoD,UAAU,sBAAhB,SAAuCpD,ICzE3C,IA+CQsL,GA/Cf,kDAKI,WAAYxI,GAAQ,IAAD,8BACf,cAAMA,IACDyI,OAAS,GAFC,EALvB,0CAYI,WAEI,OACI,sBAAKnI,UAAU,YAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,GAAD,eAAc/D,KAAKyD,YAI3B,qBAAKM,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACA,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,mBAAmBvD,KAAK,QAAvC,SACI,gGAIJ,qBAAKuD,UAAU,YAAf,SACS/D,KAAKyD,MAAM3B,YAAY5B,IAAIiF,KAAI,SAAC7E,EAAIwD,GAAL,OAChC,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UAA0B,qBAAKA,UAAU,mBAAf,8DAAiDiI,GAAU1L,GAAI,8BAAK,gCAAQA,EAAGK,YACzG,sBAAKoD,UAAU,WAAf,UAA0B,qBAAKA,UAAU,mBAAf,iIAA6DuE,GAAahI,QAF9EwD,sBAhC1D,GAAqCW,aC+BtB0H,I,OAlCf,4JAKI,WACI,OACI,gCACI,qBAAKpI,UAAU,qBAAqBvD,KAAK,QAAzC,SACA,2SAEA,wBAAOuD,UAAU,iBAAjB,UACI,gCACI,+BACI,yFACA,4GACA,gEACA,6FAGR,gCACC/D,KAAKyD,MAAM1D,OAAOoF,KAAI,SAACxD,EAAGmC,GAAJ,OAAU,+BAC7B,6BAAKnC,EAAEyK,UACP,6BAAKzK,EAAE0K,WACP,6BAAK1K,EAAE2K,aACP,6BAAK3K,EAAEgC,YAJ+BG,kBArB9D,GAAgCW,c,UCS1B8H,GAAe,SAAC9I,GAClB,OACI,qBAAKM,UAAU,+BAA+BvD,KAAK,QAAnD,SACI,6BAAKiD,EAAMD,WA0FRgJ,G,kDAnFX,WAAY/I,GAAQ,IAAD,8BACf,cAAMA,IACDwD,MAAQ,CACTnF,YAAa,KACb/B,OAAQ,KACRyD,MAAO,MALI,E,qDASnB,WACI,IAAMiJ,EAASC,IAAYC,MAAMnF,OAAOC,SAASmF,QAC3CzE,EAASsE,EAAM,OAAa,uCAC5BI,EAAYJ,EAAM,SAClB7E,EAAQkF,OAAOC,KAAKN,GAAQO,SAAS,SACrC9F,EAAOuF,EAAM,KACfrI,EAAW6I,uBAAYR,EAAM,UAAgB,IAEjC,gBAAbrI,IACCA,EAAW,MAGf,IAAI8I,EAAKT,EAAM,GACf,IAAKS,EAGD,OAFAxJ,QAAQF,MAAM,kHACdxD,KAAKsH,SAAS,CAAEa,QAAO0E,WAAUrJ,MAAO,mHAI5C,IAEI,IAAI1D,EAAO,KACX,IACIA,EAAO8I,KAAK+D,MAAMO,GACpB,MAAO1J,GAGL,OAFAE,QAAQF,MAAM,iBAAkB0J,QAChClN,KAAKsH,SAAS,CAAEa,QAAO0E,WAAUrJ,MAAO,kPAI5C,IAAM1B,EAAc,IAAIjC,EAAYC,GACpCE,KAAKsH,SAAS,CAAExF,cAAaqG,QAAO0E,WAAU3F,OAAMU,QAAOxD,aAC7D,MAAOrE,GAEL2D,QAAQF,MAAM,eAAgBzD,GAC9BC,KAAKsH,SAAS,CAAEvH,c,oBAIxB,WAEI,IAAIoN,EAAU,KASd,OARInN,KAAKiH,MAAMnF,YACXqL,EAAU,cAAC,GAAD,CAAiB/I,SAAUpE,KAAKiH,MAAM7C,SAAUwD,MAAO5H,KAAKiH,MAAMW,MAAOV,KAAMlH,KAAKiH,MAAMC,KAAMpF,YAAa9B,KAAKiH,MAAMnF,cAC3H9B,KAAKiH,MAAMzD,MAClB2J,EAAU,cAAC,GAAD,CAAc3J,MAAOxD,KAAKiH,MAAMzD,QACnCxD,KAAKiH,MAAMlH,SAClBoN,EAAU,cAAC,GAAD,CAAYpN,OAAQC,KAAKiH,MAAMlH,UAIzC,sBAAKgE,UAAU,gBAAf,UACK,qBAAKA,UAAU,MAAf,SACG,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,uCAAf,SACI,sBAAKA,UAAU,UAAf,UACI,6BAAK/D,KAAKiH,MAAMkB,QACfnI,KAAKiH,MAAM4F,UAAY,6BAAK7M,KAAKiH,MAAM4F,WACxC,uBAAM,kJACN,oBAAGO,IAAI,sBAAsBrH,OAAO,SAASsH,KAAK,8BAAlD,iBAAsF,sBAAMtJ,UAAU,qDAAhB,sCAKtG,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACKoJ,a,GA7EP1I,aCRE6I,QACW,cAA7B9F,OAAOC,SAAS8F,UAEe,UAA7B/F,OAAOC,SAAS8F,UAEhB/F,OAAOC,SAAS8F,SAASjK,MACvB,2DCTN/B,IAEAiM,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9I,MAAK,SAAA+I,GACjCA,EAAaC,kB","file":"static/js/main.2aed07e2.chunk.js","sourcesContent":["/*\n* Схемы операций для валидирования.\n*/\n\n/**\n * Взято из исходников голоса\n */\nconst known_operations = [\n    \"vote\",\n    \"comment\",\n\n    \"transfer\",\n    \"transfer_to_vesting\",\n    \"withdraw_vesting\",\n\n    \"limit_order_create\",\n    \"limit_order_cancel\",\n\n    \"feed_publish\",\n    \"convert\",\n\n    \"account_create\",\n    \"account_update\",\n\n    \"witness_update\",\n    \"account_witness_vote\",\n    \"account_witness_proxy\",\n\n    \"pow\",\n\n    \"custom\",\n\n    \"report_over_production\",\n\n    \"delete_comment\",\n    \"custom_json\",\n    \"comment_options\",\n    \"set_withdraw_vesting_route\",\n    \"limit_order_create2\",\n    \"challenge_authority\",\n    \"prove_authority\",\n    \"request_account_recovery\",\n    \"recover_account\",\n    \"change_recovery_account\",\n    \"escrow_transfer\",\n    \"escrow_dispute\",\n    \"escrow_release\",\n    \"pow2\",\n    \"escrow_approve\",\n    \"transfer_to_savings\",\n    \"transfer_from_savings\",\n    \"cancel_transfer_from_savings\",\n    \"custom_binary\",\n    \"decline_voting_rights\",\n    \"reset_account\",\n    \"set_reset_account\",\n    \"delegate_vesting_shares\",\n    \"account_create_with_delegation\",\n    \"account_metadata\",\n    \"proposal_create\",\n    \"proposal_update\",\n    \"proposal_delete\",\n    \"chain_properties_update\",\n    \"break_free_referral\",\n    \"delegate_vesting_shares_with_interest\",\n    \"reject_vesting_shares_delegation\",\n    \"worker_request\",\n    \"worker_request_delete\",\n    \"worker_request_vote\"\n\n]\n\n\n/**\n * Схема параметра transaction. Ожидается массив (Array) операций\n */\nconst transaction = {\n    \"$id\" : \"/golos/transaction\",\n    type: \"array\",\n    minItems: 1,\n    items: [ \n        {\"$ref\": \"/golos/operation\"}\n    ]\n}\n\n/**\n * Операция \n */\nconst operation = {\n    \"$id\" : \"/golos/operation\",\n    type: \"array\",\n    minItems: 2, maxLength: 2,\n    items: [\n        {type: \"string\", enum: known_operations},\n        {type: \"object\"}\n    ]\n}\n\n\nconst account = {\n    \"$id\" : \"/golos/account\",\n    type: \"string\",\n    pattern: \"^[a-z][-\\\\.a-z\\\\d]{2,15}[a-z\\\\d]$\"\n}\n\nconst permlink = {\n    \"$id\" : \"/golos/permlink\",\n    type: \"string\",\n    pattern: \"^.{1,256}$\"\n}\n\nconst public_key = {\n    \"$id\" : \"/golos/public_key\",\n    type: \"string\",\n    pattern: \"^GLS[0-9a-zA-Z]{50}$\"\n}\n\nconst percent = {\n    \"$id\" : \"/golos/percent\",\n    type: \"integer\",\n    minimum: 0, \n    maximum: 10000\n}\n\nconst asset = {\n    \"$id\" : \"/golos/asset\",\n    type: \"string\",\n    pattern: \"^[0-9]+\\\\.[0-9]{3} (GOLOS|GBG)$\"\n}\n\nexport default [\n    //базовые типы\n    transaction,\n    account,\n    asset,\n    permlink,\n    public_key,\n    percent, \n\n    operation,\n]\n\n","/*\n* Вспомогательные классы для валидирования входных данных (операций) и для отображения.\n*/\nimport Ajv from \"ajv\";\nimport GolosSchema from \"./opschemas\";\n\nimport operations from \"golos-classic-js/lib/broadcast/operations\";\n\nconst ROLES_PRIORITY = {\n    \"owner\" : 0,\n    \"active\" : 1,\n    \"posting\" : 2,\n    \"memo\" : 3\n}\n\nfunction sort_roles(roles) {\n    return roles.sort((a,b) => {\n        return ROLES_PRIORITY[b] - ROLES_PRIORITY[a];\n    })\n}\n\nconst ajv = new Ajv({schemas: GolosSchema, verbose: true});\nconst validate = ajv.getSchema(\"/golos/transaction\");\n\nexport class Transaction {\n    constructor(json) {\n        if(!validate(json)) {\n            \n            throw validate.errors;\n        }\n        this.raw_transaction = [...json];\n        this.ops = [];\n        this.readOps();\n    }\n\n    /**\n     * Вернуть минимальную, требуемую роль\n     */\n    get required_wif() {\n        if(this.ops.length === 0) {\n            return null;\n        }\n        const temp = [];\n        for(let op of this.ops) {\n            temp.push(op.role);\n        }\n        return sort_roles(temp)[0];\n    }\n\n    readOps() {\n        for(let opTuple of this.raw_transaction) {\n            this.ops.push(new Operation(opTuple[0], opTuple[1]));\n        }\n    }\n}\n\nclass Operation {\n    constructor(name, body) {\n        this.name = name;\n        this.body = body;\n\n        for(let op of operations) {\n            if(op.operation === this.name) {\n                this.roles = sort_roles(op.roles);\n            }\n        }\n    }\n\n    get role() {\n        //Вернуть самый слабый ключ \n        return this.roles[0];\n    }\n    \n}\n\n//////////////////////////\n\nfunction test_roles() {\n    console.log(\"TEST\", sort_roles([\"active\", \"owner\", \"posting\"]))\n    console.log(\"TEST\", sort_roles([\"posting\", \"active\", \"owner\"]))\n    console.log(\"TEST\", sort_roles([\"active\", \"owner\"]))\n}\n\n//test_roles();","const golos = require(\"golos-classic-js\");\n\nexport const SIGN_TYPE = {\n    PASSWORD: \"password\",\n    WIF: \"wif\",\n}\n\nconst WEBSOCKET = \"websocket\";\nconst DEFAULT_WS = \"wss://golos.lexai.host/ws\";\n\nexport const NODES = {\n    [DEFAULT_WS] : \"Lex\",\n    \"wss://golos.viz.media/ws\" : \"Solox\",\n    \"wss://api-golos.blckchnd.com/ws\" : \"Blockchained\",\n    \"wss://api.aleksw.space/ws\" : \"alexw\"\n}\n\nexport function getCurrentSelectedNode() {\n    return localStorage.getItem(WEBSOCKET) || DEFAULT_WS;\n}\n\nexport function setCurrentSelectedNode(ws = DEFAULT_WS) {\n    try {\n        golos.api.stop();\n    } catch(e) {\n    }\n    golos.config.set(WEBSOCKET, ws);\n\n    localStorage.setItem(WEBSOCKET, ws);\n}\n\nexport function setupNode() {\n    const ws = getCurrentSelectedNode();\n    try {\n        golos.api.stop();\n    } catch(e) {\n    }\n\n    golos.config.set(WEBSOCKET, ws);\n}\n\n/**\n * Подпись и отправка транзакции. Имплементация взята из golos-classic-js.broadcast.send и адаптирована под свои нужды.\n * @param {operation/Transaction} transaction \n * @param {SIGN_TYPE} sign_type \n * @param {string} account \n * @param {string} password \n * @returns \"Возвращает данные о созданной транзакции\"\n */\nasync function signandsend(transaction, sign_type, account, password) {\n\n    setupNode();\n\n    const {raw_transaction, required_wif} = transaction;\n\n    //Получаем ключ из аккаунта и пароля, если передан пароль\n    const wif = getWif(sign_type, account, password, required_wif);\n\n    //Формируем объект транзакции и объект с ключем\n    const tx = {extensions: [], operations: raw_transaction}; \n    const key = {[required_wif]: wif};\n\n    //Подготавливаем транзакцию используя метод библиотеки. Получаем блок референсный блок, выставляем expiration.\n    const prepared_tx = await golos.broadcast._prepareTransaction(tx);\n    \n    //Подписываем транзакцию ключем\n    const signed_tx = golos.auth.signTransaction(prepared_tx, key);\n\n    //Отправляем транзакцию ноде и в ответ получаем ID транзакции и блок.\n    let ret = await golos.api.broadcastTransactionSynchronousAsync(signed_tx);\n    return ret;\n}\n\n/**\n * Генерирует из имени аккаунта и мастер-пароля ключ нужного уровня доступа. \n * Или возвращает пароль как есть, в надежде, что это приватный ключ.\n * @param {SIGN_TYPE} sign_type - Тип подписи. Аккаунт + пароль или приыватный ключ.\n * @param {string} account - Аккаунт голос\n * @param {string} password - Пароль или приватный ключ\n * @param {string} required_wif - Требуемый уровень доступа - owner, active, posting или memo\n * @returns \"Возвращает необходимый для подписи ключ.\"\n */\nfunction getWif(sign_type, account, password, required_wif) {\n    switch(sign_type) {\n        case SIGN_TYPE.PASSWORD:\n            const wifs = golos.auth.getPrivateKeys(account, password, [required_wif]);\n            return wifs[required_wif];\n        default:\n            return password;\n    }\n}\n\n/**\n * Проверяет, существует ли аккаунт с таким именем. Для этого пробует загрузить данные аккаунта.\n * @param {string} account \n * @returns Возвращет текст с сообщением об ошибке.\n */\nexport async function checkAccount(account) {\n    if(!account) {\n        return \"Аккаунт обязателен для аутентификации паролем\";\n    }\n    const [acc] = await golos.api.getAccountsAsync([account]);\n    if(!acc) {\n        return \"Аккаунт с таким именем не существует!\";\n    }\n    return null;\n}\n\nexport default signandsend;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ERROR_DESC = {\n    \"Expected version\": \"Вероятно введенный ключ не является приватным ключем, неверный формат, пропущенный знак\",\n    \"3020100\": \"Введенный ключ либо недостаточного уровня либо отсутствует в ауторити пользователя, неверный пароль\",\n    \"2020000\": \"Недостаточно средств на счету пользователя\",\n    \"3080000\": \"Повторная транзакция с такими же параметрами в блоке\",\n    \"2030000\": \"Ошибка в операции с указанным индексом\",\n    \"1020400\": \"Неверное переданное значение\",\n    \"4020100\": \"Значение находится вне заданных пределов\",\n    \"3010000\": \"Ошибочная операция в транзакции\",\n}\n\nfunction getDesc(msg) {\n    for(let pattern in ERROR_DESC) {\n        if(msg.match(pattern)) {\n            return ERROR_DESC[pattern];\n        }\n    }\n    return null;\n}\n\nexport class SignErrorsView extends Component {\n    static propTypes = {\n        error: PropTypes.object,\n        result: PropTypes.object,\n        redirect: PropTypes.string,\n    }\n\n    extractErrorMessage() {\n        const error = this.props.error;\n        console.error(\"error\", error);\n        let ret = [<h4 key=\"head\">Ошибка отправки транзакции</h4>];\n        if(error.message) {\n            let arr = error.message.split(\"\\n\");\n            for(let i = 0; i < arr.length; i++) {\n                if(arr[i] && !arr[i].match(/for the full error payload/)) {\n                    ret.push(<p key=\"error-text\" className=\"mb-0\">{arr[i]}</p>);\n                    const desc = getDesc(arr[i]);\n                    if(desc) {\n                        ret.push(<small key=\"error-desc\" className=\"mb-0\">{desc}</small>);\n                    }                    \n                }\n            }\n        }\n\n        return ret;\n    }\n\n    extractUsefulInfos() {\n        return <div>\n            <h4>Отправлено!</h4>\n                <p className=\"mb-0\">Номер блока: {this.props.result.block_num}</p>\n                <p className=\"mb-0\">ID транзакции: {this.props.result.id}</p>\n                {this.props.redirect && <p className=\"mt-2\">Вы будете автоматически перенаправлены на адрес <strong>{this.props.redirect}</strong>...</p>\n                }\n            </div>;\n    }\n\n    render() {\n        const isError = !!this.props.error;\n        const alert = isError? \"danger\" : \"success\"\n        const message = isError?this.extractErrorMessage():this.extractUsefulInfos();\n        return (\n            <div className={\"mt-5 mb-5 alert alert-\"+ alert} role=\"alert\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default SignErrorsView\n","import { useEffect, useState } from \"react\"\r\n\r\n\r\nexport default function ApiNodes() {\r\n\r\n    const [nodes, setNodes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            fetch(\"https://raw.githubusercontent.com/golos-blockchain/golos-links/main/api-nodes.json\")\r\n            .then(result => result.json())\r\n            .then(result => setNodes(result), error => console.log(\"unable to load nodes from hithub\"));\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        nodes.map(node => (\r\n            <option key={node.url} value={node.url}>{node.name}</option>\r\n        ))\r\n    )\r\n}","import React, { useEffect } from 'react'\nimport {SIGN_TYPE} from \"../service/sign\";\nimport {getCurrentSelectedNode, setCurrentSelectedNode} from \"../service/sign\";\nimport ApiNodes from '../service/api-nodes';\n\nconst NodeSelector = (props) => {\n\n    const current_ws = getCurrentSelectedNode();\n\n    return (\n        <div className=\"form-group  input-group-sm\">\n            <label htmlFor=\"selectNode\">Нода</label>\n            <select className=\"form-control\" id=\"selectNode\" defaultValue={current_ws} onChange={(v => setCurrentSelectedNode(v.target.value))}>\n                <ApiNodes />\n            </select>                  \n        </div>\n    );\n}\n\nfunction translate_role(role) {\n    switch(role) {\n        case \"owner\": return \"приватный ключ владельца\"; \n        case \"active\": return \"приватный, активный ключ\"; \n        case \"posting\": return \"приватный, постинг ключ\"; \n        case \"memo\": return \"приватный, ключ для заметок\"; \n        default:\n            return null;\n    }\n}\n\nexport const WifInput = (props) => {\n    const wif_class = (props.wif_error?\" is-invalid\":\"\");\n    return (\n        <input id={props.id} name={props.id}\n            value={props.wif}\n            onChange={(ev) => props.onChange(\"wif\", ev.target.value)}\n            type=\"password\"\n            className={\"form-control\" + wif_class}\n            aria-describedby=\"wif-help\"\n            required />\n    );\n}\n\n\nexport const TabButton = (props) => {\n    const { active } = props;\n    const active_class = active ? \" active \" : \"\";\n    return (\n        <li className=\"nav-item\">\n            <button className={\"btn nav-link \" + active_class} onClick={props.selectForm}>{props.label}</button>\n        </li>\n    )\n}\n\nexport const SignButton = (props) => {\n    return (\n        <div className=\"form-group input-group-sm\">\n            <button type=\"button\" id=\"sign-botton\" className=\"btn btn-primary\" onClick={props.onSign}>Отправить</button>\n        </div>\n    )\n}\n\nexport const FormWif = (props) => {\n    const {transaction, form_class, wif_error} = props;\n    return (\n        <form id=\"sign-form\" className={form_class}>\n            <NodeSelector />\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"wif\">Приватный ключ</label>\n\n                <WifInput id=\"wif\" {...props} />\n\n                <small id=\"wif-help\" className=\"form-text text-muted\">Для подписи транзакции требуется как минимум <strong>{translate_role(transaction.required_wif)}</strong></small>\n                <div className=\"invalid-feedback\">{wif_error}</div>\n            </div>\n            <SignButton  {...props} />\n        </form>\n    )\n}\n\nexport const FormAccountAndPasswort = (props) => {\n    const {form_class, onChange, account, account_error, wif_error} = props;\n    const account_class = (account_error?\" is-invalid\":\"\");\n    return (\n        <form id=\"sign-form\" className={form_class}>\n            <NodeSelector />\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"account\">Имя пользователя</label>\n\n                <input\n                    id=\"account\"\n                    name=\"account\"\n                    value={account}\n                    onChange={(ev) => onChange(\"account\", ev.target.value)}\n                    type=\"text\"\n                    className={\"form-control\" + account_class}\n                    placeholder=\"Аккаунт в блокчейне golos\"\n                    required />\n\n                <div className=\"invalid-feedback\">{account_error}</div>\n            </div>\n            <div className=\"form-group input-group-sm\">\n                <label htmlFor=\"wif\">Пароль</label>\n\n                <WifInput id=\"password\" {...props} />\n\n                <div className=\"invalid-feedback\">{wif_error}</div>\n            </div>\n\n            <SignButton  {...props}/>\n        </form>\n    )\n}\n\nexport const FormSelector = (props) => {\n\n    switch (props.sign_type) {\n        case SIGN_TYPE.WIF:\n            return <FormWif {...props} />;\n        default:\n            return <FormAccountAndPasswort {...props} />;\n    }\n}\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transaction } from \"../service/operation\";\nimport signandsend, {SIGN_TYPE, checkAccount} from \"../service/sign\";\nimport SignErrorsView from './SignErrorsView';\nimport MediaQuery from 'react-responsive';\n\nimport {FormSelector} from \"./SignFormComponents\";\nimport {FaKey, FaUser} from \"react-icons/fa\";\n\nexport class SignForm extends Component {\n\n    static propTypes = {\n        transaction: PropTypes.instanceOf(Transaction).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            wif: \"\",\n            account: props.user || \"\",\n            error: null,\n            result: null,\n            sign_type: SIGN_TYPE.WIF,\n            account_error : null,\n            sending: false,\n            redirect: null,\n        }\n    }\n\n    /**\n     * Собственно отправка транзакции\n     */\n    send() {\n        signandsend(this.props.transaction, this.state.sign_type, this.state.account, this.state.wif)\n            .then(result => this.onSuccess(result))\n            .catch(error => this.setState({ result: null, error, account_error: null, sending: false }));\n        this.setState({sending:true, error: null, result: null});\n    }\n\n    onSuccess(result) {\n        this.setState({ result, error: null, account_error: null, sending: false })\n        this.redirect();\n    }\n\n    redirect() {\n        if(!this.props.redirect) {\n            return;\n        }\n\n        setTimeout(() => {window.location = this.props.redirect}, 5 * 1000);\n    }\n\n    onSign() {\n        //Валидация форм.\n        switch(this.state.sign_type) {\n            case SIGN_TYPE.PASSWORD:\n                    let wif_error = null;\n                    if(!this.state.wif) {\n                        wif_error = \"Пароль обязателен\";\n                    }\n\n                    checkAccount(this.state.account).then(account_error => {\n                    if(account_error || wif_error) {\n                        this.setState({account_error, wif_error});\n                    } else {\n                        //При отсутствии ошибок оправить транзакцию\n                        this.send();\n                    }\n                }).catch(error => {\n                    console.error(\"Ошибка проверки аккаунта\");\n                    this.setState({account_error: \"Не получилось проверить аккаунт\"});\n                })\n\n                break;\n            default:\n                if(!this.state.wif) {\n                    this.setState({wif_error: \"Приватный ключ обязателен\"})\n                    return;\n                }\n                //При отсутствии ошибок оправить транзакцию\n                this.send();\n        }\n    }\n\n    onChange(key, value) {\n        this.setState({[key]:value, wif_error:null, account_error:null});\n    }\n\n    render() {\n        const {nowif, redirect} = this.props;\n        let form_class = \"needs-validation\";\n\n        const TabButton = (props) => {\n            const { sign_type } = props;\n            const active = this.state.sign_type === sign_type ? \" active \" : \"\";\n            return (<li className=\"nav-item\"><button  type=\"button\" className={\"btn btn-block nav-link \" + active} onClick={() => this.setState({ sign_type })}>{props.label}</button></li>)\n        }\n\n        const BottomToggler = (props) => {\n            if(nowif) {\n                const is_pass = this.state.sign_type === SIGN_TYPE.PASSWORD;\n                const icon = is_pass?<FaKey />:<FaUser />;\n                const sign_type =  is_pass?SIGN_TYPE.WIF:SIGN_TYPE.PASSWORD;\n                const title = is_pass?\"Подпись ключом\":\"Подпись паролем\";\n                return <button type=\"button\" title={title} \n                    className=\"btn-outline-primary float-right btn btn-sm btn-primary\" \n                    onClick={() => this.setState({ sign_type })}>{icon}</button>;\n            }\n            return null;\n        }\n\n        return (\n            <div className=\"clearfix border p-2 m-2\">\n                {!nowif && <div className=\" mb-3\">\n                \n                {(!this.state.sending && !this.state.result) && \n                <div>\n                <MediaQuery minWidth={425}>\n                    <ul className=\"nav nav-tabs\">\n                        <TabButton key={SIGN_TYPE.WIF} label=\"Подпись ключом\" sign_type={SIGN_TYPE.WIF} />\n                        <TabButton key={SIGN_TYPE.PASSWORD} label=\"Подпись паролем\" sign_type={SIGN_TYPE.PASSWORD} />\n                    </ul>\n                </MediaQuery>\n                <MediaQuery maxWidth={420}>\n                    <ul className=\"nav nav-pills nav-justified\">\n                        <TabButton key={SIGN_TYPE.WIF} label=\"Подпись ключем\" sign_type={SIGN_TYPE.WIF} />\n                        <TabButton key={SIGN_TYPE.PASSWORD} label=\"Подпись паролем\" sign_type={SIGN_TYPE.PASSWORD} />\n                    </ul>\n                </MediaQuery>\n                </div>\n                }\n\n                </div>}\n                \n                {(this.state.error || this.state.result) && <SignErrorsView error={this.state.error} result={this.state.result} redirect={redirect} />}\n                {this.state.sending && <div className={\"mt-5 mb-5 alert alert-warning\"} role=\"alert\">\n                    <h4>Отправка...</h4>\n                    </div>\n                }\n\n                {(!this.state.sending && !this.state.result) && \n                    <FormSelector \n                        onChange={(key,value) => this.onChange(key, value)}\n                        onSign={() => this.onSign()}\n                        form_class={form_class}\n                        {...this.state}\n                        {...this.props}\n                    />\n                }\n                {(!this.state.sending && !this.state.result) &&  <BottomToggler /> }\n            </div>\n        )\n    }\n}\n\nexport default SignForm\n","import React from 'react'\n\nexport function getOpDetails(op) {\n    switch(op.name) {\n        case \"transfer\":\n            return <div className=\"md-2 border-bottom\">\n                <strong>От</strong> {op.body.from}, <strong>Кому</strong> {op.body.to}, <strong>Сумма</strong> {op.body.amount}\n                <br /><strong>Заметка</strong> {(\"\"+op.body.memo || \"\").substring(0, 50)}\n            </div>;\n        default:\n            return <pre>{JSON.stringify(op.body, null, 2)}</pre>;\n    }\n}\n\nconst OP_TRANSLATIONS = {\n    vote: \"Апвоут\", \n    comment: \"Пост/Комментарий\", \n\n    transfer: \"Перевод\", \n    transfer_to_vesting: \"Перевод в СГ\", \n    withdraw_vesting: \"Понижение СГ\", \n\n    limit_order_create: \"Создать ордер\", \n    limit_order_cancel: \"Отменить ордер\", \n\n    feed_publish: \"Опубликовать фид\", \n    convert: \"Конвертировать GBG в GOLOS\", \n\n    account_create: \"Создать аккаунт\", \n    account_update: \"Обновить аккаунт\", \n\n    witness_update: \"Обновить делегата\", \n    account_witness_vote: \"Проголосовать за делегата\", \n    account_witness_proxy: \"Назначить доверенного\", \n\n    pow: \"Proof of Work\", \n\n    custom: \"custom\", \n\n    report_over_production: \"Настучать\", \n\n    delete_comment: \"Удалить пост или комментарий\", \n    custom_json: \"Кастомная операция\", \n    comment_options: \"Настроить пост/комментарий\", \n    set_withdraw_vesting_route: \"Установить путь понижения СГ\", \n    limit_order_create2: \"Создать ордер 2\", \n    challenge_authority: \"challenge_authority\", \n    prove_authority: \"prove_authority\", \n    request_account_recovery: \"request_account_recovery\", \n    recover_account: \"recover_account\", \n    change_recovery_account: \"change_recovery_account\", \n    escrow_transfer: \"escrow_transfer\", \n    escrow_dispute: \"escrow_dispute\", \n    escrow_release: \"escrow_release\", \n    pow2: \"Proof of Work 2\", \n    escrow_approve: \"escrow_approve\", \n    transfer_to_savings: \"Перевести в сейф\", \n    transfer_from_savings: \"Вывести из сейфа\", \n    cancel_transfer_from_savings: \"Отменить вывод из сейфа\", \n    custom_binary: \"Кастомная операция (бин.)\", \n    decline_voting_rights: \"Отказаться от голосования (необратимая операция!)\", \n    reset_account: \"reset_account\", \n    set_reset_account: \"set_reset_account\", \n    delegate_vesting_shares: \"delegate_vesting_shares\", \n    account_create_with_delegation: \"account_create_with_delegation\", \n    account_metadata: \"Обновить профиль\", \n    proposal_create: \"proposal_create\", \n    proposal_update: \"proposal_update\", \n    proposal_delete: \"proposal_delete\", \n    chain_properties_update: \"Обновить параметры сети\", \n    break_free_referral: \"Откупиться\", \n    delegate_vesting_shares_with_interest: \"Делегирование с отчислением процента\", \n    reject_vesting_shares_delegation: \"Отказаться от делегирования\",   \n}\n\nexport function getOpName(op) {\n    let name = OP_TRANSLATIONS[op.name];\n    if(!name) name = op.name;\n\n    return <span className=\"label label-default\">{name}</span>\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transaction } from \"../service/operation\";\nimport SignForm from './SignForm';\nimport {getOpDetails, getOpName} from \"./OperationDetails\";\n\nexport class TransactionView extends Component {\n    static propTypes = {\n        transaction: PropTypes.instanceOf(Transaction).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.status = {\n\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row \">\n                    <div className=\"col-sm-12\">\n                        <SignForm {...this.props} />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                    <div className=\" border m-2 p-2\">\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            <h4>Содержимое</h4>\n                        </div>\n\n\n                        <div className=\"container\">\n                                {this.props.transaction.ops.map((op, i) => (\n                                <div className=\"row\" key={i}>\n                                    <div className=\"col-sm-3\"><div className=\"font-weight-bold\">Операция</div>{getOpName(op)}<div><small>{op.name}</small></div></div>\n                                    <div className=\"col-sm-9\"><div className=\"font-weight-bold\">Детальная информация</div>{getOpDetails(op)}</div>\n                                </div>\n                                ))\n                                }\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TransactionView\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class ErrorsView extends Component {\n    static propTypes = {\n        errors: PropTypes.arrayOf(Object).isRequired\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"alert alert-danger\" role=\"alert\">\n                <h4>Полученная на подпись транзакция содержит ошибки</h4>\n                </div>\n                <table className=\"table table-sm\">\n                    <thead>\n                        <tr>\n                            <th>Тип ошибки</th>\n                            <th>Место в данных</th>\n                            <th>Схема</th>\n                            <th>Сообщение</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.errors.map((e, i) => <tr key={i}>\n                        <td>{e.keyword}</td>\n                        <td>{e.dataPath}</td>\n                        <td>{e.schemaPath}</td>\n                        <td>{e.message}</td>\n                    </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default ErrorsView\n","import queryString from \"query-string\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport TransactionView from \"./TransactionView\";\n\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport { Transaction } from \"../service/operation\";\nimport ErrorsView from \"./ErrorsView\";\n\nimport {sanitizeUrl} from \"@braintree/sanitize-url\"\n\nconst ErrorMessage = (props) => {\n    return (\n        <div className=\"mt-5 mb-5 alert alert-danger\" role=\"alert\">\n            <h4>{props.error}</h4>\n        </div>\n    );\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            transaction: null,\n            errors: null,\n            error: null\n        }\n    }\n\n    componentDidMount() {\n        const params = queryString.parse(window.location.search);\n        const title = (params[\"title\"] || \"Писарь\");\n        const subtitle = (params[\"subtitle\"]);\n        const nowif = Object.keys(params).includes(\"nowif\");\n        const user = params[\"user\"];\n        let redirect = sanitizeUrl(params[\"redirect\"] || \"\");\n\n        if(redirect === \"about:blank\") {\n            redirect = null;\n        }\n\n        let tr = params[\"tr\"];\n        if (!tr) {\n            console.error(\"Не найден URL параметр tr\");\n            this.setState({ title, subtitle, error: \"Вызов без параметров\" });\n            return;\n        }\n\n        try {\n            //Пробуем распарсить json\n            let json = null;\n            try {\n                json = JSON.parse(tr);\n            } catch (error) {\n                console.error(\"not valid json\", tr);\n                this.setState({ title, subtitle, error: \"Переданная транзакция не является валидным JSON\" });\n                return;\n            }\n            //Проверка транзакции на валидность\n            const transaction = new Transaction(json);\n            this.setState({ transaction, title, subtitle, user, nowif, redirect });\n        } catch (errors) {\n            //обнаружены ошибки\n            console.error(\"found errors\", errors)\n            this.setState({ errors });\n        }\n    }\n\n    render() {\n\n        let content = null;\n        if (this.state.transaction) {\n            content = <TransactionView redirect={this.state.redirect} nowif={this.state.nowif} user={this.state.user} transaction={this.state.transaction} />\n        } else if (this.state.error) {\n            content = <ErrorMessage error={this.state.error} />\n        } else if (this.state.errors) {\n            content = <ErrorsView errors={this.state.errors} />\n        }\n\n        return (\n            <div className=\"container App\">\n                {<div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <nav className=\"navbar navbar-expand-lg navbar-light\" >\n                            <div className=\"mr-auto\">\n                                <h3>{this.state.title}</h3>\n                                {this.state.subtitle && <h5>{this.state.subtitle}</h5>}\n                                <br /><small>Подпись транзакции GOLOS\n                                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://golos.io/@ropox/sign\">&nbsp;<span className=\"rounded-circle bg-info text-white font-weight-bold\">&nbsp;?&nbsp;</span></a></small>\n                            </div>\n                        </nav>\n                    </div>\n            </div>}\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.error(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {setupNode} from \"./service/sign\";\n\n//in library actually is wss://ws.golos.io, therefore setup previosly selected node, or default \nsetupNode();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}